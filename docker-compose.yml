services:
  csv-import-ms:
    build:
      context: ./csv-import-ms
      dockerfile: Dockerfile
    ports:
      - "${PORT_IMPORT}:${PORT_IMPORT}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}"
      PORT: ${PORT_IMPORT}
      NODE_ENV: production
      APP_VERSION: ${APP_VERSION:-1.0.0}
    restart: unless-stopped
    command: sh -c "
      echo 'Checking database connection...' &&
      until pg_isready -h db -p 5432 -U ${DB_USER}; do echo 'Waiting for database...'; sleep 2; done &&
      echo 'Database is ready, running migrations...' &&
      npx prisma migrate deploy &&
      echo 'Starting application...' &&
      npm start"

  query-ms:
    build:
      context: ./query-ms
      dockerfile: Dockerfile
    ports:
      - "${PORT_QUERY}:${PORT_QUERY}"
    depends_on:
      csv-import-ms:
        condition: service_started
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}"
      PORT: ${PORT_QUERY}
      NODE_ENV: production
      APP_VERSION: ${APP_VERSION:-1.0.0}
    restart: unless-stopped
    command: sh -c "
      echo 'Checking database connection...' &&
      until pg_isready -h db -p 5432 -U ${DB_USER}; do echo 'Waiting for database...'; sleep 2; done &&
      echo 'Generating Prisma client...' &&
      npx prisma generate &&
      echo 'Starting application...' &&
      npm start"

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
